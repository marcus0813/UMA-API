// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using UMA.Infrastructure.Persistence;

#nullable disable

namespace UMA.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("UMA.Domain.Entities.User", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfilePictureUrl")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("RefreshToken")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            ID = new Guid("fa7cfbb5-911a-418d-a39d-101dbd10c00b"),
                            CreatedAt = new DateTime(2025, 8, 22, 9, 9, 46, 288, DateTimeKind.Utc).AddTicks(5267),
                            Email = "marcus.kok@email.com",
                            FirstName = "Marcus",
                            LastName = "Kok",
                            Password = "$2b$10$keaG7Umfr2fr0XZ9PnF.wuiYFTzkrU1uLZyh4Z.tQE6YSn.QXlbfO",
                            ProfilePictureUrl = "",
                            RefreshToken = ""
                        },
                        new
                        {
                            ID = new Guid("72f04621-e341-453d-b596-7427da8bdd98"),
                            CreatedAt = new DateTime(2025, 8, 22, 9, 9, 46, 375, DateTimeKind.Utc).AddTicks(8607),
                            Email = "alfred.kok@email.com",
                            FirstName = "Alfred",
                            LastName = "Kok",
                            Password = "$2b$10$oibRNoAhGh.iiaMCe7T7bubV4fa17PBchNop8WxO4EbSJCSElVJeK",
                            ProfilePictureUrl = "",
                            RefreshToken = ""
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
